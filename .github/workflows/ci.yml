name: CI
on: [push]
jobs:
  css-theme:
    strategy:
      matrix:
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    name: css-theme (${{ matrix.os }} OS, python ${{ matrix.python-version }}, NodeJS ${{ matrix.nodejs-version }})
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Clone git project
        uses: actions/checkout@v2
      - name: Install, run, wait and test
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/css-theme && npm i
          cd $GITHUB_WORKSPACE/css-theme && npm start
          cd $GITHUB_WORKSPACE/css-theme && npm run logs &
          wait-port 1234
          http get :1234
          cd $GITHUB_WORKSPACE/css-theme && npm stop
  basic-grid:
    strategy:
      matrix:
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    name: basic-grid (${{ matrix.os }} OS, python ${{ matrix.python-version }}, NodeJS ${{ matrix.nodejs-version }})
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Clone git project
        uses: actions/checkout@v2
      - name: Install, run, wait and test
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/basic-grid && npm i
          cd $GITHUB_WORKSPACE/basic-grid && npm start
          cd $GITHUB_WORKSPACE/basic-grid && npm run logs &
          wait-port 1234
          http get :1234
          cd $GITHUB_WORKSPACE/basic-grid && npm stop
  css-variables:
    strategy:
      matrix:
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    name: css-variables (${{ matrix.os }} OS, python ${{ matrix.python-version }}, NodeJS ${{ matrix.nodejs-version }})
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Clone git project
        uses: actions/checkout@v2
      - name: Install, run, wait and test
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/css-variables && npm i
          cd $GITHUB_WORKSPACE/css-variables && npm start
          cd $GITHUB_WORKSPACE/css-variables && npm run logs &
          wait-port 1234
          http get :1234
          cd $GITHUB_WORKSPACE/css-variables && npm stop
  sal-super-lightweight-animation:
    strategy:
      matrix:
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    name: sal-super-lightweight-animation (${{ matrix.os }} OS, python ${{ matrix.python-version }}, NodeJS ${{ matrix.nodejs-version }})
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Clone git project
        uses: actions/checkout@v2
      - name: Install, run, wait and test
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/sal-super-lightweight-animation && npm i
          cd $GITHUB_WORKSPACE/sal-super-lightweight-animation && npm start
          cd $GITHUB_WORKSPACE/sal-super-lightweight-animation && npm run logs &
          wait-port 1234
          http get :1234
          cd $GITHUB_WORKSPACE/sal-super-lightweight-animation && npm stop
  scss-bootstrap4-starter:
    strategy:
      matrix:
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    name: scss-bootstrap4-starter (${{ matrix.os }} OS, python ${{ matrix.python-version }}, NodeJS ${{ matrix.nodejs-version }})
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Clone git project
        uses: actions/checkout@v2
      - name: Install, run, wait and test
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/scss-bootstrap4-starter && npm i
          cd $GITHUB_WORKSPACE/scss-bootstrap4-starter && npm start
          cd $GITHUB_WORKSPACE/scss-bootstrap4-starter && npm run logs &
          wait-port 1234
          http get :1234
          cd $GITHUB_WORKSPACE/scss-bootstrap4-starter && npm stop
  css-gradient-based-app-step-2:
    strategy:
      matrix:
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    name: css-gradient-based-app-step-2 (${{ matrix.os }} OS, python ${{ matrix.python-version }}, NodeJS ${{ matrix.nodejs-version }})
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Clone git project
        uses: actions/checkout@v2
      - name: Install, run, wait and test
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/css-gradient-based-app-step-2 && npm i
          cd $GITHUB_WORKSPACE/css-gradient-based-app-step-2 && npm run dev &
          wait-port 1234
          http get :1234
  css-gradient-based-app-step-1:
    strategy:
      matrix:
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    name: css-gradient-based-app-step-1 (${{ matrix.os }} OS, python ${{ matrix.python-version }}, NodeJS ${{ matrix.nodejs-version }})
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Clone git project
        uses: actions/checkout@v2
      - name: Install, run, wait and test
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/css-gradient-based-app-step-1 && npm i
          cd $GITHUB_WORKSPACE/css-gradient-based-app-step-1 && npm run dev &
          wait-port 1234
          http get :1234
  css-gradient:
    strategy:
      matrix:
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    name: css-gradient (${{ matrix.os }} OS, python ${{ matrix.python-version }}, NodeJS ${{ matrix.nodejs-version }})
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Clone git project
        uses: actions/checkout@v2
      - name: Install, run, wait and test
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/css-gradient && npm i
          cd $GITHUB_WORKSPACE/css-gradient && npm run dev &
          wait-port 1234
          http get :1234
  css-correct-way-to-inline-blocks-with-flex:
    strategy:
      matrix:
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    name: css-correct-way-to-inline-blocks-with-flex (${{ matrix.os }} OS, python ${{ matrix.python-version }}, NodeJS ${{ matrix.nodejs-version }})
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Clone git project
        uses: actions/checkout@v2
      - name: Run install
        shell: bash
        run: cd $GITHUB_WORKSPACE/css-boxing-model-and-layout-basics && npm i
      - name: Run server
        shell: bash
        run: cd $GITHUB_WORKSPACE/css-boxing-model-and-layout-basics && npm run dev &
      - name: Wait for server
        shell: bash
        run: wait-port 1234
      - name: Run CI tests
        shell: bash
        run: http get :1234
  css-boxing-model-and-layout-basics:
    strategy:
      matrix:
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    name: css-boxing-model-and-layout-basics (${{ matrix.os }} OS, python ${{ matrix.python-version }}, NodeJS ${{ matrix.nodejs-version }})
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Clone git project
        uses: actions/checkout@v2
      - name: Run install
        shell: bash
        run: cd $GITHUB_WORKSPACE/css-boxing-model-and-layout-basics && npm i
      - name: Run server
        shell: bash
        run: cd $GITHUB_WORKSPACE/css-boxing-model-and-layout-basics && npm run dev &
      - name: Wait for server
        shell: bash
        run: wait-port 1234
      - name: Run CI tests
        shell: bash
        run: http get :1234
